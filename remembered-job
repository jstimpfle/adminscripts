#!/bin/sh

usage() {
	cat >&2 <<'EOF'
Usage:
    remembered-job new <jobname> [-once] <shell-cmd>
    remembered-job add <jobname> <host-spec>
    remembered-job run <jobname> [<host-spec>]
    remembered-job status <jobname> [<host-spec>]
EOF
	exit 1
}

shell_escape() {
	printf %s\\n "$1" | sed -e 's/[^a-zA-Z0-9_-]/\\&/g; $!s/$/\\/'
}

job_must_exist() {
	if ! test -d "$jobdir"; then
		echo "Job does not exist: $job"
		exit 1
	fi
	if ! test -d "$queuedir" \
	    -a -d "$resultsdir" \
	    -a -f "$jobdir"/command; then
		echo >&2 "Error: Job directories/files not properly set up."
		exit 1
	fi
}

new() (
	set -e
	if test $# = 2; then
		once=false
		command=$2
	elif test $# = 3 -a "$2" = -once; then
		once=true
		command=$3
	else
		usage
	fi
	if test -d "$jobdir"; then
		echo >&2 "Error: Can't create: job exists"
		exit 1
	fi
	mkdir "$jobdir" "$queuedir" "$resultsdir"
	$once && touch "$jobdir"/once
	printf %s\\n "$command" > "$jobdir"/command
)

add() (
	set -e
	test $# -ge 2 || usage
	shift
	job_must_exist
	for i in "$@"; do
		if test -e "$resultsdir/$i"; then
			echo >&2 "$i already added to $job; not adding."
			continue
		fi
		date '+Added %F %T' > "$queuedir/$i"
		mkdir "$resultsdir/$i"
	done
)

run_one() (
	arg=$1
	set -e

	cd "$resultsdir/$arg"
	dir=1
	while test -d "$dir" ; do
		dir=$((dir + 1))
	done
	mkdir "$dir"
	ln -s "$dir" last

	cmd_e=$(shell_escape "$jobdir/command")
	arg_e=$(shell_escape "$arg")
	script -e -c "sh -- $cmd_e $arg_e" -ttimings typescript
	ests=$?
	if test $ests -eq 0 && test -f "$jobdir"/once ; then
		echo "Exitstatus $ests" > failed
		rm "$queuedir/$arg"
	fi
)

run() (
	set -e
	test $# -ge 1 || usage
	shift
	if test $# -eq 0 ; then
		for i in "$queuedir"/* ; do
			test -f "$i" || continue
			set -- "$@" "$(basename "$i")"
		done
	else
		for i in "$@" ; do
			if ! test -f "$queuedir/$i" ; then
				echo >&2 "Error: $i is not scheduled for $job".
				exit 1
			fi
			set -- "$@" "$i"
			shift
		done
	fi
	if test $# -eq 0 ; then
		echo >&2 "Nothing to do."
	fi
	for i in "$@" ; do
		run_one "$i"
	done
)

status() (
	test $# -eq 1 || usage
	echo "Queued:"
	echo "======="
	ls -l "$queuedir"
	echo
	echo "Finished:"
	echo "========="
	ls -l "$resultsdir"
)

rj_dir=~/remembered_jobs

if ! test -d "$rj_dir" ; then
	echo >&2 "$rj_dir does not exist (or is not a directory). Aborting."
	exit 1
fi

job=$2
jobdir=$rj_dir/$job
queuedir=$jobdir/queue
resultsdir=$jobdir/results

case "$1" in new|add|run|status) "$@" ;; *) usage ;; esac
