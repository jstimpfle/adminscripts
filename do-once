#!/bin/sh

usage() {
	cat >&2 <<'EOF'
Usage: do-once new <jobname> <shell-cmd>
       do-once add <jobname> <host> [<host>...]
       do-once run <jobname> [<host> ...]
       do-once status <jobname>
EOF
	exit 1
}

job=$2
jobdir=~/adminjobs/once/$job
queuedir=$jobdir/queued
finishdir=$jobdir/finished

new() {
	test $# -eq 2 || usage
	if test -d "$jobdir"
	then
		echo >&2 "Error: Can't create: job exists"
		return 1
	fi
	mkdir "$jobdir" "$queuedir" "$finishdir" || return 1
	printf %s\\n "$2" > "$jobdir"/command || return 1
}

add() {
	test $# -ge 2 || usage
	shift
	if ! test -d "$jobdir"
	then
		echo >&2 "Error: No such job"
		return 1
	fi
	if ! test -d "$queuedir" -a -d "$finishdir" -a -f "$jobdir"/command
	then
		echo >&2 "Error: Job directories/files not properly set up."
		return 1
	fi
	for i in "$@"
	do
		if test -f "$queuedir"/"$i" || test -f "$finishdir"/"$i"
		then
			echo >&2 "Warning: $i already added to $job"
			continue
		fi
		date '+Added %F %T' > "$queuedir"/"$i"
	done
}

run() {
	test $# -ge 1 || usage
	shift
	if test $# -eq 0
	then
		for i in "$queuedir"/*
		do
			test -f "$i" || continue
			set -- "$@" "$i"
		done
	else
		for i in "$@"
		do
			if ! test -f "$queuedir"/"$i"
			then
				echo >&2 "Error: $i is not scheduled for $job".
				return 1
			fi
			set -- "$@" "$queuedir"/"$i"
			shift
		done
	fi
	for i in "$@"
	do
		lockfile "$i".lock || continue
		echo >> "$i"
		date >> "$i" '+Starting at %F %T'
		sh 2>&1 -- "$jobdir"/command "$(basename "$i")" \
		| tee -a "$i" \
		&& mv "$i" "$finishdir"/
		rm -f "$i".lock
	done
}

status() {
	test $# -eq 1 || usage
	echo "Queued:"
	echo "======="
	ls -l "$queuedir"
	echo
	echo "Finished:"
	echo "========="
	ls -l "$finishdir"
}

case "$1" in new|add|run|status) "$@" ;; *) usage ;; esac
